/* Tus variables de color (asumidas, asegúrate que estén definidas en :root o similar) */
:root {
    --day-bg: #f0f2f5;
    --day-primary: #98b6d8;
    --day-text: #2d3436;
    --night-bg: #344561;
    --night-primary: #4a5f7d;
    --night-text: #e0e7f3;
    /* ... y otras variables que uses ... */
}

.shorts-container {
    background: var(--day-bg);
    height: calc(100vh - 80px); /* Altura de la ventana visible para shorts */
    display: flex; /* Para centrar el reels-wrapper si tiene max-width */
    justify-content: center;
    align-items: center; /* Alinea verticalmente si el reels-wrapper es más pequeño, aunque con height 100% no tendrá efecto */
    overflow: hidden; /* MUY IMPORTANTE: Oculta los reels que se mueven fuera del viewport */
    margin-top: 80px; /* Si tienes una barra de navegación fija de 80px arriba */
    position: relative; /* Para posicionamiento absoluto/fijo de elementos hijos como botones de navegación */
}

.dark-theme .shorts-container {
    background: var(--night-bg);
}

.reels-wrapper {
    width: 100%;
    height: 100%; /* Ocupa toda la altura del shorts-container */
    max-width: 500px; /* Limita el ancho de los shorts, se centrará por el flex del parent */
    position: relative; /* Contexto de posicionamiento para los video-reel */
    /* ELIMINADO: scroll-snap-type: y mandatory; */ /* No es necesario si JS maneja el scroll */
    /* ELIMINADO: overflow-y: auto; */ /* JS controlará el "scroll" con transform */
    /* AÑADIDO (de mi sugerencia anterior, para la animación suave con JS) */
    transition: transform 0.4s ease-in-out;
}

.video-reel {
    position: relative; /* Para superposiciones como degradados o información */
    width: 100%; /* Ocupa todo el ancho del reels-wrapper */
    height: 100%; /* ***** MODIFICACIÓN IMPORTANTE ***** */
                  /* Para que `translateY(-${index * 100}%)` en el JS funcione como se espera,
                     cada reel debe ocupar el 100% de la altura del `reels-wrapper`.
                     El contenido visual (video) DENTRO del reel puede tener su `90vh`
                     o las dimensiones que necesites, pero el 'contenedor' del reel
                     para el scrolling de JS debería ser 100%. */
                  /* Si prefieres que cada reel tenga una altura visible de 90vh y márgenes,
                     el JS necesitará calcular el desplazamiento en píxeles exactos (ver nota al final).
                     Por ahora, lo adaptaremos a 100% para el JS que te di. */

    /* Si mantienes estas propiedades (height: 90vh; margin: 20px 0;):
    height: 90vh;
    min-height: 600px;
    margin: 20px 0;
    El JavaScript necesitará calcular el desplazamiento en píxeles.
    Por ahora, para simplificar con el JS actual, considera height: 100%
    y manejar el tamaño del video internamente.
    */

    border-radius: 15px;
    overflow: hidden; /* Para que el video no se salga del borde redondeado */
    background: var(--day-primary);
    /* ELIMINADO: scroll-snap-align: start; */ /* No es necesario sin scroll-snap-type */

    /* Para centrar el contenido si el video-reel en sí no es height:100% del wrapper */
    display: flex;
    flex-direction: column;
    justify-content: center; /* Centra el contenido del video si es más pequeño que el reel */
    align-items: center;
}


.dark-theme .video-reel {
    background: var(--night-primary);
}

.reel-video {
    width: 100%;
    /* Ajusta la altura del video aquí si el .video-reel es 100% height del wrapper */
    height: 100%; /* O puedes usar max-height: 90vh; o similar si quieres que no ocupe todo */
    object-fit: cover;
    display: block; /* Evita espacios extra */
}

.navigation-buttons {
    position: fixed; /* Fijo a la ventana gráfica */
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    z-index: 1000; /* Asegura que esté por encima de otros elementos */
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.nav-btn {
    width: 45px;
    height: 45px;
    border-radius: 50%;
    backdrop-filter: blur(5px);
    background: rgba(255, 255, 255, 0.1);
    border: none;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    cursor: pointer;
}

.nav-btn:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: scale(1.1) translateY(-50%); /* Ajustar el translateY si el original no lo tiene */
                                          /* Original: transform: translateY(-50%) en .navigation-buttons */
                                          /* Para hover: transform: scale(1.1); es suficiente si el translateY está en el contenedor */
}
/* Corrección para el hover si el translateY ya está en el contenedor padre */
.navigation-buttons .nav-btn:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: scale(1.1); /* El translateY -50% ya está en .navigation-buttons */
}


.dark-theme .nav-btn {
    background: rgba(0, 0, 0, 0.15); /* Fondo un poco más oscuro en tema oscuro */
    color: var(--night-text); /* O un color claro específico */
}
.dark-theme .nav-btn:hover {
    background: rgba(0, 0, 0, 0.25);
}


.reel-controls {
    position: absolute;
    right: 10px;
    bottom: 20%; /* Se ve bien, puedes ajustar a un valor fijo en px si prefieres, ej. bottom: 80px; */
    display: flex;
    flex-direction: column;
    gap: 25px;
    color: white;
    z-index: 2; /* Por encima del video pero debajo de popups/modales si los hubiera */
}

.control-group { /* Asumo que esta clase envuelve cada botón y su texto de stats */
    display: flex;
    flex-direction: column;
    align-items: center;
}

.btn-custom-circle {
    width: 45px;
    height: 45px;
    border-radius: 50% !important; /* !important para asegurar la forma circular si Bootstrap interfiere */
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(5px);
    border: none;
    color: white; /* Asegurar color de ícono */
    cursor: pointer;
    transition: background-color 0.2s ease, transform 0.2s ease;
}
.btn-custom-circle:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: scale(1.1);
}


.btn-custom-circle i {
    font-size: 1.2rem;
}

.stats {
    font-size: 0.8rem;
    text-align: center;
    display: block;
    margin-top: 5px;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.3); /* Sombra sutil para legibilidad */
}

.video-info {
    position: absolute;
    bottom: 20px;
    left: 15px;
    right: 70px; /* Dejar espacio para los controles de la derecha */
    color: white;
    z-index: 2;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.5); /* Sombra para toda la info */
}

.user-info {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
}

.user-img {
    width: 35px;
    height: 35px;
    border-radius: 50%;
    margin-right: 10px;
    border: 2px solid rgba(255, 255, 255, 0.8); /* Borde un poco transparente */
}

.username {
    font-weight: 600;
    font-size: 0.95rem;
}
/* Para el botón de seguir dentro de user-info */
.user-info .btn-custom.rounded-pill {
    background-color: white;
    color: black;
    font-weight: bold;
    border: none;
    padding: 5px 12px;
    font-size: 0.8rem;
}
.dark-theme .user-info .btn-custom.rounded-pill {
    background-color: rgba(255,255,255,0.2);
    color: white;
}


.caption {
    font-size: 0.9rem;
    margin-bottom: 5px;
    line-height: 1.3; /* Mejorado para multilínea */
    /* Para evitar texto muy largo en una sola línea */
    word-break: break-word;
}

.tags {
    font-size: 0.8rem;
    opacity: 0.9;
    word-break: break-word; /* Para hashtags largos */
}

/* Efectos de gradiente y temas */
.video-reel::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 50%; /* Cubre la mitad inferior */
    background: linear-gradient(to top, rgba(0, 0, 0, 0.7), transparent); /* Gradiente más suave hacia arriba */
    z-index: 1; /* Entre el video y la info/controles */
    pointer-events: none; /* Para que no interfiera con clics en la info */
    border-radius: 0 0 15px 15px; /* Para que coincida con el borde del reel */
}

.dark-theme .btn-custom-circle {
    background: rgba(255, 255, 255, 0.08); /* Un poco más visible en tema oscuro */
    color: var(--night-text);
}
.dark-theme .btn-custom-circle:hover {
    background: rgba(255, 255, 255, 0.15);
}


.dark-theme .reel-controls,
.dark-theme .video-info {
    color: var(--night-text);
}

.dark-theme .video-reel::after {
    background: linear-gradient(to top, rgba(0, 0, 0, 0.85), transparent); /* Un poco más oscuro para tema oscuro */
}

/* Scrollbar personalizada (Solo visible si se usa overflow-y: scroll/auto en reels-wrapper, no aplica si JS maneja el scroll) */
.reels-wrapper::-webkit-scrollbar {
    width: 6px;
}

.reels-wrapper::-webkit-scrollbar-track {
    background: transparent;
}

.reels-wrapper::-webkit-scrollbar-thumb {
    background: var(--day-primary); /* Considera un color más contrastante con el fondo de los shorts */
    border-radius: 4px;
}

.dark-theme .reels-wrapper::-webkit-scrollbar-thumb {
    background: var(--night-primary); /* Considera un color más contrastante */
}

/* Ocultar controles nativos del video si no los quieres */
.reel-video::-webkit-media-controls {
    display: none !important;
}
.reel-video::-moz-media-controls { /* Firefox */
    display: none !important;
}
.reel-video::media-controls { /* Estándar emergente */
    display: none !important;
}
/* Si no quieres que se muestren en absoluto, ni siquiera al pasar el mouse (ya que usamos controles personalizados) */
.reel-video::-webkit-media-controls-enclosure {
    display:none !important;
}
.reel-video::-webkit-media-controls-panel {
    display:none !important;
}